---
- name: customization systemd
  hosts:  systemd
  become: true

  tasks:
  - name: create checklog in sysconfig
    copy:
      dest: /etc/sysconfig/checklog
      content: |
        WORD="ALERT"
        LOG=/var/log/checklog.log

  - name: create checklog.log
    copy:
      dest: /var/log/checklog.log
      content: |
        2015-07-01 02:13:13,429 DEBUG     #2600  Trying to decode document with charset us-ascii ...
        2015-07-01 02:13:13,535 ERROR     #2600  Text not in charset us-ascii ('ascii' codec can't decode byte 0xea in position 161022: ordinal not in range(128))
        2015-07-01 02:14:06,213 DEBUG     #2600  Got charset ISO-8859-2 from text sniffing
        2015-07-01 02:14:06,220 DEBUG     #2600  Trying to decode document with charset iso-8859-2 ...
        2015-07-01 02:14:07,019 ERROR     #2600  etree.fromstring says: Entity 'mdash' not defined, line 1316, column 24
        2015-07-01 02:14:07,061 ALERT     #2600  Line 1316:       Antichrist&mdash;I really believe he is Antichrist&mdash;I will have

  - name: create checklog.sh
    copy:
      dest: /opt/checklog.sh
      content: |
        #!/bin/bash

        WORD=$1
        LOG=$2
        DATE=`date`

        if grep $WORD $LOG &> /dev/null
        then
        logger "$DATE: I found $WORD!"
        else
        exit 0
        fi

  - name: chmod +x shell script
    file: 
      dest: /opt/checklog.sh
      mode: +x 

  - name: create checklog.service
    copy:
      dest: /etc/systemd/system/checklog.service
      content: |
        [Unit]
        Description=Checklog service

        [Service]
        Type=oneshot
        EnvironmentFile=/etc/sysconfig/checklog
        ExecStart=/opt/checklog.sh $WORD $LOG

  - name: create checklog.timer
    copy:
      dest: /etc/systemd/system/checklog.timer
      content: |
        [Unit]
        Description=Run checklog script every 30 second

        [Timer]
        # Run every 30 second
        OnUnitActiveSec=30
        Unit=checklog.service

        [Install]
        WantedBy=multi-user.target

  - name: chmod 664 checklog.service
    file: 
      dest: /etc/systemd/system/checklog.service
      mode: 0664

  - name: chmod 664 checklog.timer
    file: 
      dest: /etc/systemd/system/checklog.timer
      mode: 0664

  - name: Start service httpd, if not started
    service:
      name: checklog.timer
      state: started
      enabled: yes
      name: checklog.service
      state: started
      enabled: yes
  
  - name: check messages log
    command: tail -n 10 /var/log/messages
    register: messages

  - debug: msg="{{ messages }}"

  - name: Replace SOCKET
    replace:
      path: /etc/sysconfig/spawn-fcgi
      regexp: '#SOCKET'
      replace: 'SOCKET'

  - name: Replace OPTIONS
    replace:
      path: /etc/sysconfig/spawn-fcgi
      regexp: '#OPTIONS'
      replace: 'OPTIONS'

  - name: create spawn-fcgi.service
    copy:
      dest: /etc/systemd/system/spawn-fcgi.service
      content: |
        [Unit]
        Description=Spawn-fcgi startup service
        After=network.target

        [Service]
        Type=simple
        PIDFile=/var/run/spawn-fcgi.pid
        EnvironmentFile=/etc/sysconfig/spawn-fcgi
        ExecStart=/usr/bin/spawn-fcgi -n $OPTIONS
        KillMode=process

        [Install]
        WantedBy=multi-user.target

  - name: started spawn-fcgi.service
    service:
      name: spawn-fcgi.service
      state: started

  - name: check status spawn-fcgi.service
    shell: systemctl status spawn-fcgi.service
    register: status_spawn

  - debug: msg="{{ status_spawn }}"

  - name: create httpd@.service
    copy:
      dest: /etc/systemd/system/httpd@.service
      content: |
        [Unit]
        Description=The Apache HTTP Server
        After=network.target remote-fs.target nss-lookup.target
        Documentation=man:httpd(8)
        Documentation=man:apachectl(8)

        [Service]
        Type=notify
        EnvironmentFile=/etc/sysconfig/%I
        ExecStart=/usr/sbin/httpd $OPTIONS -DFOREGROUND
        ExecReload=/usr/sbin/httpd $OPTIONS -k graceful
        ExecStop=/bin/kill -WINCH ${MAINPID}
        KillSignal=SIGCONT
        PrivateTmp=true

        [Install]
        WantedBy=multi-user.target

  - name: create template.conf
    copy:
      dest: /etc/httpd/conf.d/template.conf
      content: |
        Listen ${PORT}
        PidFile ${PID_FILE}

  - name: create httpd1
    copy:
      dest: /etc/sysconfig/httpd1
      content: |
        PORT=8888
        PID_FILE=/etc/httpd/run/httpd1.pid

  - name: create httpd2
    copy:
      dest: /etc/sysconfig/httpd2
      content: |
        PORT=8001
        PID_FILE=/etc/httpd/run/httpd2.pid

  - name: install policycoreutils-python 
    yum:
      name: policycoreutils-python 

  - name: create 80 port in httpd.conf
    command: sed -i '/Listen 80/d' /etc/httpd/conf/httpd.conf

  - name: opening the port 8888
    command: semanage port -a -t http_port_t -p tcp 8888
    
  - name: opening the port 8001
    command: semanage port -a -t http_port_t -p tcp 8001

  - name: Start service httpd
    service:
      name: httpd@httpd1
      state: started

  - name: 
    service:
      name: httpd@httpd2
      state: started

  - name: check httpd1
    shell: systemctl status httpd@httpd1 
    register: httpd1

  - debug: msg="{{ httpd1 }}"

  - name: check httpd2
    shell: systemctl status httpd@httpd2
    register: httpd2

  - debug: msg="{{ httpd2 }}"